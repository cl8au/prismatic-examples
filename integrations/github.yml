category: ""
configPages:
  - elements:
      - type: configVar
        value: GitHub Connection
      - type: configVar
        value: Zendesk Connection
    name: Connections
    tagline: ""
  - elements:
      - type: configVar
        value: GitHub Repository
      - type: configVar
        value: GitHub Webhook Secret
      - type: configVar
        value: GitHub Ticket Email Address
    name: GitHub Configuration
    tagline: ""
    userLevelConfigured: false
definitionVersion: 7
description: ""
documentation: ""
endpointType: flow_specific
flows:
  - description: ""
    endpointSecurityType: customer_optional
    isSynchronous: false
    name: Webhook Configuration
    steps:
      - action:
          key: instanceDeploy
          component:
            isPublic: true
            key: management-triggers
            version: LATEST
        description: ""
        inputs: {}
        isTrigger: true
        name: Webhook Configuration Trigger
      - action:
          key: split
          component:
            isPublic: true
            key: text-manipulation
            version: LATEST
        description: ""
        inputs:
          separator:
            type: value
            value: /
          text:
            type: configVar
            value: GitHub Repository
        name: Split String
      - action:
          key: reposDeleteInstanceWebhooks
          component:
            isPublic: true
            key: github
            version: LATEST
        description: ""
        inputs:
          connection:
            type: configVar
            value: GitHub Connection
          owner:
            type: reference
            value: splitString.results.0
          repo:
            type: reference
            value: splitString.results.1
        name: Repos Delete Instance Webhooks
      - action:
          key: reposCreateWebhook
          component:
            isPublic: true
            key: github
            version: LATEST
        description: ""
        inputs:
          callbackUrl:
            type: reference
            value: >-
              webhookConfigurationTrigger.results.webhookUrls.Handle GitHub
              Events
          connection:
            type: configVar
            value: GitHub Connection
          events:
            type: complex
            value:
              - type: value
                value: issues
              - type: value
                value: issue_comment
          owner:
            type: reference
            value: splitString.results.0
          repo:
            type: reference
            value: splitString.results.1
          webhookSecret:
            type: configVar
            value: GitHub Webhook Secret
        name: Repos Create Webhook
      - action:
          key: createWebhook
          component:
            isPublic: true
            key: zendesk
            version: LATEST
        description: ""
        inputs:
          allowDuplicates:
            type: value
            value: "false"
          callbackUrl:
            type: reference
            value: >-
              webhookConfigurationTrigger.results.webhookUrls.Handle Zendesk
              Events
          events:
            type: complex
            value:
              - type: value
                value: conditional_ticket_events
          name:
            type: value
            value: GitHub Zendesk Webhook
          zendeskConnection:
            type: configVar
            value: Zendesk Connection
        name: Create Webhook
      - action:
          key: createWebhookTrigger
          component:
            isPublic: true
            key: zendesk
            version: LATEST
        description: ""
        inputs:
          allowDuplicates:
            type: value
            value: "false"
          conditions:
            type: value
            value: |-
              {
                "all": [],
                "any": [
                  {
                    "field": "status",
                    "operator": "changed"
                  },
                  {
                    "field": "status",
                    "operator": "not_changed"
                  }
                ]
              }
          connection:
            type: configVar
            value: Zendesk Connection
          messageBody:
            type: value
            value: |-
              {
                "current_user": {
                  "details": "{{current_user.details}}",
                  "email": "{{current_user.email}}",
                  "external_id": "{{current_user.external_id}}",
                  "first_name": "{{current_user.first_name}}",
                  "language": "{{current_user.language}}",
                  "name": "{{current_user.name}}",
                  "notes": "{{current_user.notes}}",
                  "organization.details": "{{current_user.organization.details}}",
                  "organization.name": "{{current_user.organization.name}}",
                  "organization.notes": "{{current_user.organization.notes}}",
                  "phone": "{{current_user.phone}}",
                  "tags": "{{current_user.tags}}"
                },
                "ticket": {
                  "account": "{{ticket.account}}",
                  "assignee": {
                    "first_name": "{{ticket.assignee.first_name}}",
                    "last_name": "{{ticket.assignee.last_name}}",
                    "name": "{{ticket.assignee.name}}"
                  },
                  "brand": {
                    "name": "{{ticket.brand.name}}"
                  },
                  "cc_names": "{{ticket.cc_names}}",
                  "ccs": "{{ticket.ccs}}",
                  "comments_formatted": "{{ticket.comments_formatted}}",
                  "description": "{{ticket.description}}",
                  "due_date": "{{ticket.due_date}}",
                  "email_cc_names": "{{ticket.email_cc_names}}",
                  "email_ccs": "{{ticket.email_ccs}}",
                  "external_id": "{{ticket.external_id}}",
                  "follower_names": "{{ticket.follower_names}}",
                  "follower_reply_type_message": "{{ticket.follower_reply_type_message}}",
                  "followers": "{{ticket.followers}}",
                  "group": {
                    "name": "{{ticket.group.name}}"
                  },
                  "id": "{{ticket.id}}",
                  "in_business_hours": "{{ticket.in_business_hours}}",
                  "latest_comment_formatted": "{{ticket.latest_comment_formatted}}",
                  "latest_public_comment_formatted": "{{ticket.latest_public_comment_formatted}}",
                  "link": "{{ticket.link}}",
                  "organization": {
                    "external_id": "{{ticket.organization.external_id}}",
                    "name": "{{ticket.organization.name}}"
                  },
                  "priority": "{{ticket.priority}}",
                  "public_comments_formatted": "{{ticket.public_comments_formatted}}",
                  "requester": {
                    "email": "{{ticket.requester.email}}",
                    "external_id": "{{ticket.requester.external_id}}",
                    "first_name": "{{ticket.requester.first_name}}",
                    "language": "{{ticket.requester.language}}",
                    "last_name": "{{ticket.requester.last_name}}",
                    "name": "{{ticket.requester.name}}",
                    "phone": "{{ticket.requester.phone}}"
                  },
                  "status": "{{ticket.status}}",
                  "tags": "{{ticket.tags}}",
                  "ticket_field_ID": "{{ticket.ticket_field_ID}}",
                  "ticket_field_option_title_ID": "{{ticket.ticket_field_option_title_ID}}",
                  "ticket_form": "{{ticket.ticket_form}}",
                  "ticket_type": "{{ticket.ticket_type}}",
                  "title": "{{ticket.title}}",
                  "via": "{{ticket.via}}"
                }
              }
          title:
            type: value
            value: GitHub Zendesk Trigger
          webhookId:
            type: reference
            value: createWebhook.results.webhook.id
        name: Create Webhook Trigger
  - description: ""
    endpointSecurityType: customer_optional
    isSynchronous: false
    name: Handle GitHub Events
    steps:
      - action:
          key: webhook
          component:
            isPublic: true
            key: github
            version: LATEST
        description: ""
        inputs:
          webhookSecret:
            type: configVar
            value: GitHub Webhook Secret
        isTrigger: true
        name: Receive GitHub Events Trigger
      - action:
          key: branchOnValue
          component:
            isPublic: true
            key: branch
            version: LATEST
        branches:
          - name: Issue
            steps:
              - action:
                  key: join
                  component:
                    isPublic: true
                    key: text-manipulation
                    version: LATEST
                description: ""
                inputs:
                  separator:
                    type: value
                    value: "-"
                  strings:
                    type: complex
                    value:
                      - type: value
                        value: gh
                      - type: reference
                        value: >-
                          receiveGithubEventsTrigger.results.body.data.issue.number
                name: Generate ticket external ID
              - action:
                  key: branchOnValue
                  component:
                    isPublic: true
                    key: branch
                    version: LATEST
                branches:
                  - name: Issue Created
                    steps:
                      - action:
                          key: joinLines
                          component:
                            isPublic: true
                            key: text-manipulation
                            version: LATEST
                        description: ""
                        inputs:
                          newlineType:
                            type: value
                            value: |+

                          numberOfNewlines:
                            type: value
                            value: "1"
                          strings:
                            type: complex
                            value:
                              - type: value
                                value: "[Ticket Created in GitHub]"
                              - type: template
                                value: >-
                                  Issue URL:
                                  {{$receiveGithubEventsTrigger.results.body.data.issue.html_url}}
                              - type: value
                                value: " "
                              - type: reference
                                value: >-
                                  receiveGithubEventsTrigger.results.body.data.issue.body
                        name: Format Ticket Body
                      - action:
                          key: createTicket
                          component:
                            isPublic: true
                            key: zendesk
                            version: LATEST
                        description: ""
                        inputs:
                          assigneeId:
                            type: value
                            value: ""
                          debug:
                            type: value
                            value: "false"
                          externalId:
                            type: reference
                            value: generateTicketExternalId.results
                          followers:
                            type: complex
                            value: []
                          recipientEmail:
                            type: value
                            value: ""
                          requesterEmail:
                            type: configVar
                            value: GitHub Ticket Email Address
                          requesterName:
                            type: reference
                            value: >-
                              receiveGithubEventsTrigger.results.body.data.issue.user.login
                          requesterOrganization:
                            type: value
                            value: ""
                          tags:
                            type: complex
                            value: []
                          ticketComment:
                            type: reference
                            value: formatTicketBody.results
                          ticketCommentHTML:
                            type: value
                            value: ""
                          ticketPriority:
                            type: value
                            value: ""
                          ticketStatus:
                            type: value
                            value: open
                          ticketSubject:
                            type: reference
                            value: >-
                              receiveGithubEventsTrigger.results.body.data.issue.title
                          ticketType:
                            type: value
                            value: ""
                          zendeskConnection:
                            type: configVar
                            value: Zendesk Connection
                        name: Create Ticket
                  - name: Issue Updated
                    steps:
                      - action:
                          key: getByExternalId
                          component:
                            isPublic: true
                            key: zendesk
                            version: LATEST
                        description: Get ID of ticket to update
                        inputs:
                          debug:
                            type: value
                            value: "false"
                          externalId:
                            type: reference
                            value: generateTicketExternalId.results
                          zendeskConnection:
                            type: configVar
                            value: Zendesk Connection
                        name: Get Ticket By External ID
                      - action:
                          key: updateTicket
                          component:
                            isPublic: true
                            key: zendesk
                            version: LATEST
                        description: ""
                        inputs:
                          assigneeEmail:
                            type: value
                            value: ""
                          assigneeId:
                            type: value
                            value: ""
                          debug:
                            type: value
                            value: "false"
                          file:
                            type: value
                            value: ""
                          fileName:
                            type: value
                            value: ""
                          requesterOrganization:
                            type: value
                            value: ""
                          tags:
                            type: complex
                            value: []
                          ticketComment:
                            type: value
                            value: ""
                          ticketCommentHTML:
                            type: value
                            value: ""
                          ticketId:
                            type: reference
                            value: getTicketByExternalId.results.0.id
                          ticketPriority:
                            type: value
                            value: ""
                          ticketStatus:
                            type: value
                            value: ""
                          ticketSubject:
                            type: reference
                            value: >-
                              receiveGithubEventsTrigger.results.body.data.issue.title
                          ticketType:
                            type: value
                            value: ""
                          zendeskConnection:
                            type: configVar
                            value: Zendesk Connection
                        name: Update Ticket
                  - name: Issue Closed
                    steps:
                      - action:
                          key: getByExternalId
                          component:
                            isPublic: true
                            key: zendesk
                            version: LATEST
                        description: Get ID of ticket to close
                        inputs:
                          debug:
                            type: value
                            value: "false"
                          externalId:
                            type: reference
                            value: generateTicketExternalId.results
                          zendeskConnection:
                            type: configVar
                            value: Zendesk Connection
                        name: Get Ticket By External ID 2
                      - action:
                          key: updateTicket
                          component:
                            isPublic: true
                            key: zendesk
                            version: LATEST
                        description: ""
                        inputs:
                          assigneeEmail:
                            type: value
                            value: ""
                          assigneeId:
                            type: value
                            value: ""
                          debug:
                            type: value
                            value: "false"
                          file:
                            type: value
                            value: ""
                          fileName:
                            type: value
                            value: ""
                          requesterOrganization:
                            type: value
                            value: ""
                          tags:
                            type: complex
                            value: []
                          ticketComment:
                            type: value
                            value: ""
                          ticketCommentHTML:
                            type: value
                            value: ""
                          ticketId:
                            type: reference
                            value: getTicketByExternalId2.results.0.id
                          ticketPriority:
                            type: value
                            value: ""
                          ticketStatus:
                            type: value
                            value: closed
                          ticketSubject:
                            type: value
                            value: ""
                          ticketType:
                            type: value
                            value: ""
                          zendeskConnection:
                            type: configVar
                            value: Zendesk Connection
                        name: Close Ticket
                  - name: Else
                    steps:
                      - action:
                          key: stopExecution
                          component:
                            isPublic: true
                            key: stop-execution
                            version: LATEST
                        description: ""
                        inputs:
                          contentType:
                            type: value
                            value: application/json
                          jsonBody:
                            type: value
                            value: ""
                          statusCode:
                            type: value
                            value: "200"
                        name: Stop Execution 3
                description: ""
                inputs:
                  branchValueMappings:
                    type: complex
                    value:
                      - name: Issue Created
                        type: value
                        value: opened
                      - name: Issue Updated
                        type: value
                        value: edited
                      - name: Issue Closed
                        type: value
                        value: closed
                  inputValue:
                    type: reference
                    value: receiveGithubEventsTrigger.results.body.data.action
                name: Issue Event
          - name: Comment
            steps:
              - action:
                  key: branchOnExpression
                  component:
                    isPublic: true
                    key: branch
                    version: LATEST
                branches:
                  - name: Zendesk-generated event
                    steps:
                      - action:
                          key: stopExecution
                          component:
                            isPublic: true
                            key: stop-execution
                            version: LATEST
                        description: ""
                        inputs:
                          contentType:
                            type: value
                            value: application/json
                          jsonBody:
                            type: value
                            value: ""
                          statusCode:
                            type: value
                            value: "200"
                        name: Stop if comment originated from Zendesk
                  - name: Else
                    steps: []
                description: ""
                inputs:
                  conditions:
                    type: complex
                    value:
                      - name: Zendesk-generated event
                        type: complex
                        value:
                          - and
                          - - in
                            - type: value
                              value: "Created in Zendesk]"
                            - type: reference
                              value: >-
                                receiveGithubEventsTrigger.results.body.data.comment.body
                name: Short-circuit if comment from Zendesk
              - action:
                  key: join
                  component:
                    isPublic: true
                    key: text-manipulation
                    version: LATEST
                description: ""
                inputs:
                  separator:
                    type: value
                    value: "-"
                  strings:
                    type: complex
                    value:
                      - type: value
                        value: gh
                      - type: reference
                        value: >-
                          receiveGithubEventsTrigger.results.body.data.issue.number
                name: Generate ticket external ID 2
              - action:
                  key: getByExternalId
                  component:
                    isPublic: true
                    key: zendesk
                    version: LATEST
                description: ""
                inputs:
                  debug:
                    type: value
                    value: "false"
                  externalId:
                    type: reference
                    value: generateTicketExternalId2.results
                  zendeskConnection:
                    type: configVar
                    value: Zendesk Connection
                name: Get Ticket By External ID 3
              - action:
                  key: branchOnValue
                  component:
                    isPublic: true
                    key: branch
                    version: LATEST
                branches:
                  - name: Comment Created
                    steps:
                      - action:
                          key: joinLines
                          component:
                            isPublic: true
                            key: text-manipulation
                            version: LATEST
                        description: ""
                        inputs:
                          newlineType:
                            type: value
                            value: |+

                          numberOfNewlines:
                            type: value
                            value: "1"
                          strings:
                            type: complex
                            value:
                              - type: value
                                value: "[Comment Created in GitHub]"
                              - type: template
                                value: >-
                                  Comment URL:
                                  {{$receiveGithubEventsTrigger.results.body.data.comment.html_url}}
                              - type: value
                                value: " "
                              - type: reference
                                value: >-
                                  receiveGithubEventsTrigger.results.body.data.comment.body
                        name: Format Comment
                      - action:
                          key: updateTicket
                          component:
                            isPublic: true
                            key: zendesk
                            version: LATEST
                        description: ""
                        inputs:
                          assigneeEmail:
                            type: value
                            value: ""
                          assigneeId:
                            type: value
                            value: ""
                          debug:
                            type: value
                            value: "false"
                          file:
                            type: value
                            value: ""
                          fileName:
                            type: value
                            value: ""
                          requesterOrganization:
                            type: value
                            value: ""
                          tags:
                            type: complex
                            value: []
                          ticketComment:
                            type: reference
                            value: formatComment.results
                          ticketCommentHTML:
                            type: value
                            value: ""
                          ticketId:
                            type: reference
                            value: getTicketByExternalId3.results.0.id
                          ticketPriority:
                            type: value
                            value: ""
                          ticketStatus:
                            type: value
                            value: ""
                          ticketSubject:
                            type: value
                            value: ""
                          ticketType:
                            type: value
                            value: ""
                          zendeskConnection:
                            type: configVar
                            value: Zendesk Connection
                        name: Add Comment
                  - name: Else
                    steps:
                      - action:
                          key: stopExecution
                          component:
                            isPublic: true
                            key: stop-execution
                            version: LATEST
                        description: ""
                        inputs:
                          contentType:
                            type: value
                            value: application/json
                          jsonBody:
                            type: value
                            value: ""
                          statusCode:
                            type: value
                            value: "200"
                        name: Stop Execution
                description: ""
                inputs:
                  branchValueMappings:
                    type: complex
                    value:
                      - name: Comment Created
                        type: value
                        value: created
                  inputValue:
                    type: reference
                    value: receiveGithubEventsTrigger.results.body.data.action
                name: Branch on Value
          - name: Else
            steps:
              - action:
                  key: stopExecution
                  component:
                    isPublic: true
                    key: stop-execution
                    version: LATEST
                description: ""
                inputs:
                  contentType:
                    type: value
                    value: application/json
                  jsonBody:
                    type: value
                    value: ""
                  statusCode:
                    type: value
                    value: "200"
                name: Stop Execution 2
        description: ""
        inputs:
          branchValueMappings:
            type: complex
            value:
              - name: Issue
                type: value
                value: issues
              - name: Comment
                type: value
                value: issue_comment
          inputValue:
            type: reference
            value: receiveGithubEventsTrigger.results.headers.X-GitHub-Event
        name: Determine type of event
  - description: ""
    endpointSecurityType: customer_optional
    isSynchronous: false
    name: Handle Zendesk Events
    steps:
      - action:
          key: webhook
          component:
            isPublic: true
            key: zendesk
            version: LATEST
        description: ""
        inputs:
          connection:
            type: configVar
            value: Zendesk Connection
        isTrigger: true
        name: Handle Zendesk Events Trigger
      - action:
          key: branchOnExpression
          component:
            isPublic: true
            key: branch
            version: LATEST
        branches:
          - name: GitHub-Generated Event
            steps:
              - action:
                  key: stopExecution
                  component:
                    isPublic: true
                    key: stop-execution
                    version: LATEST
                description: ""
                inputs:
                  contentType:
                    type: value
                    value: application/json
                  jsonBody:
                    type: value
                    value: ""
                  statusCode:
                    type: value
                    value: "200"
                name: Stop Execution
          - name: Else
            steps: []
        description: ""
        inputs:
          conditions:
            type: complex
            value:
              - name: GitHub-Generated Event
                type: complex
                value:
                  - and
                  - - in
                    - type: value
                      value: "Created in GitHub]"
                    - type: reference
                      value: >-
                        handleZendeskEventsTrigger.results.body.data.ticket.latest_public_comment_formatted
        name: Short-Circuit Github-generated comments
      - action:
          key: split
          component:
            isPublic: true
            key: text-manipulation
            version: LATEST
        description: ""
        inputs:
          separator:
            type: value
            value: /
          text:
            type: configVar
            value: GitHub Repository
        name: Split GitHub Repo Owner and Name
      - action:
          key: replace
          component:
            isPublic: true
            key: text-manipulation
            version: LATEST
        description: ""
        inputs:
          find:
            type: value
            value: gh-
          replace:
            type: value
            value: ""
          text:
            type: reference
            value: handleZendeskEventsTrigger.results.body.data.ticket.external_id
        name: Extract GitHub issue ID
      - action:
          key: joinLines
          component:
            isPublic: true
            key: text-manipulation
            version: LATEST
        description: ""
        inputs:
          newlineType:
            type: value
            value: |+

          numberOfNewlines:
            type: value
            value: "1"
          strings:
            type: complex
            value:
              - type: value
                value: "[Comment Created in Zendesk]"
              - type: value
                value: " "
              - type: reference
                value: >-
                  handleZendeskEventsTrigger.results.body.data.ticket.latest_comment_formatted
        name: Create GitHub Comment Body
      - action:
          key: issuesCreateComment
          component:
            isPublic: true
            key: github
            version: LATEST
        description: ""
        inputs:
          body:
            type: reference
            value: createGithubCommentBody.results
          connection:
            type: configVar
            value: GitHub Connection
          issueNumber:
            type: reference
            value: extractGithubIssueId.results
          owner:
            type: reference
            value: splitGithubRepoOwnerAndName.results.0
          repo:
            type: reference
            value: splitGithubRepoOwnerAndName.results.1
        name: Issues Create Comment
  - description: ""
    endpointSecurityType: customer_optional
    isSynchronous: false
    name: Webhook Teardown
    steps:
      - action:
          key: instanceRemove
          component:
            isPublic: true
            key: management-triggers
            version: LATEST
        description: ""
        inputs: {}
        isTrigger: true
        name: Webhook Teardown Trigger
      - action:
          key: split
          component:
            isPublic: true
            key: text-manipulation
            version: LATEST
        description: ""
        inputs:
          separator:
            type: value
            value: /
          text:
            type: configVar
            value: GitHub Repository
        name: Split String
      - action:
          key: reposDeleteInstanceWebhooks
          component:
            isPublic: true
            key: github
            version: LATEST
        description: ""
        inputs:
          connection:
            type: configVar
            value: GitHub Connection
          owner:
            type: reference
            value: splitString.results.0
          repo:
            type: reference
            value: splitString.results.1
        name: Repos Delete Instance Webhooks
      - action:
          key: deleteInstanceWebhooks
          component:
            isPublic: true
            key: zendesk
            version: LATEST
        description: ""
        inputs:
          zendeskConnection:
            type: configVar
            value: Zendesk Connection
        name: Delete Instance Webhooks
name: GitHub
requiredConfigVars:
  - connection:
      key: oauth2
      component:
        isPublic: true
        key: github
        version: LATEST
    dataType: connection
    inputs:
      clientId:
        meta:
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: ""
      clientSecret:
        meta:
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: ""
      scopes:
        meta:
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: repo
    key: GitHub Connection
    onPremiseConnectionConfig: disallowed
  - dataSource:
      key: listReposForAuthenticatedUser
      component:
        isPublic: true
        key: github
        version: LATEST
    dataType: picklist
    defaultValue: ""
    description: Select the GitHub repository you would like to pull issues from
    inputs:
      connection:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: configVar
        value: GitHub Connection
    key: GitHub Repository
    orgOnly: false
  - dataType: string
    defaultValue: My-secret-value
    key: GitHub Webhook Secret
    orgOnly: true
  - connection:
      key: oauth2
      component:
        isPublic: true
        key: zendesk
        version: LATEST
    dataType: connection
    inputs:
      authorizeUrl:
        meta:
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: "https://YOUR-ZENDESK-DOMAIN.zendesk.com/oauth/authorizations/new"
      clientId:
        meta:
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: ""
      clientSecret:
        meta:
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: ""
      scopes:
        meta:
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: read write
      tokenUrl:
        meta:
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: "https://YOUR-ZENDESK-DOMAIN.zendesk.com/oauth/tokens"
    key: Zendesk Connection
    onPremiseConnectionConfig: disallowed
    orgOnly: false
  - dataType: string
    defaultValue: no-reply@example.com
    description: Email address attached to GitHub-generated tickets
    key: GitHub Ticket Email Address
    orgOnly: false
