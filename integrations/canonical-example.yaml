description: Send rocket fuel data to AcmeERP after a rocket launch
name: AcmeERP Fuel Integration
requiredConfigVars:
  acmeErpEndpoint: https://postman-echo.com/post
  slackWebhookUrl: https://hooks.slack.com/services/REPLACE/THIS/VALUE
steps:
  - action:
      componentKey: branch
      key: branchOnValue
    branches:
      - name: Zero Fuel
        steps:
          - action:
              componentKey: log
              key: writeLog
            inputs:
              level:
                type: value
                value: info
              message:
                type: value
                value: No Fuel Was Posted
            name: Log Zero Fuel Used
          - action:
              componentKey: slack
              key: postSlackMessage
            inputs:
              message:
                type: value
                value: A payload with zero fuel used was posted
              webhookUrl:
                type: configVar
                value: slackWebhookUrl
            name: Notify Customer
          - action:
              componentKey: stop-execution
              key: stopExecution
            inputs: {}
            name: Stop Execution
      - name: Else
        steps:
          - action:
              componentKey: fuel-unit-converter
              key: poundsToGallons
            inputs:
              fuelAmount:
                type: reference
                value: webhookTrigger.results.body.data.pounds
              fuelType:
                type: reference
                value: webhookTrigger.results.body.data.type
            name: Fuel to Gallons
          - action:
              componentKey: code
              key: runCode
            inputs:
              code:
                type: value
                value: |
                  module.exports = async (
                    context,
                    {
                      webhookTrigger: {
                        results: { body: { data: { type } } },
                      },
                      fuelToGallons: { results: gallons },
                    }
                  ) => {
                    const results = {
                      type,
                      gallons,
                    };
                    return { data: results };
                  };
            name: Create AcmeERP Payload
          - action:
              componentKey: http
              key: httpPost
            inputs:
              data:
                type: reference
                value: createAcmeerpPayload.results
              responseType:
                type: value
                value: json
              url:
                type: configVar
                value: acmeErpEndpoint
            name: POST to AcmeERP
    inputs:
      branchValueMappings:
        type: complex
        value:
          - name: Zero Fuel
            type: value
            value: '0'
      inputValue:
        type: reference
        value: webhookTrigger.results.body.data.pounds
    name: Zero Fuel Posted
trigger:
  description: Expects a data payload of a fuel type and amount in pounds
  name: Webhook Trigger