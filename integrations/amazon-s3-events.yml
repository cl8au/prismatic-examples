category: ""
configPages:
  - elements:
      - type: configVar
        value: Amazon AWS Connection
    name: Configuration
    tagline: ""
  - elements:
      - type: configVar
        value: Amazon S3 Bucket Name
    name: S3 Bucket
    tagline: ""
    userLevelConfigured: false
definitionVersion: 7
description: ""
documentation: >-
  An example that demonstrates how to subscribe to events in an Amazon S3
  bucket.
endpointType: flow_specific
flows:
  - description: >-
      This flow creates an SNS topic named after the instance's ID, configures
      the topic to accept requests from an S3 bucket, and configures the bucket
      to send requests to the topic. Then, it subscribes a sibling flow to the
      topic, so the sibling flow receives notifications when an event occurs.


      All actions in this flow are idempotent and can be run multiple times.
    endpointSecurityType: unsecured
    isSynchronous: false
    name: Create and configure SNS topic
    steps:
      - action:
          key: instanceDeploy
          component:
            isPublic: true
            key: management-triggers
            version: LATEST
        description: ""
        inputs: {}
        isTrigger: true
        name: Integration Trigger
      - action:
          key: getBucketLocation
          component:
            isPublic: true
            key: aws-s3
            version: LATEST
        description: ""
        inputs:
          accessKey:
            type: configVar
            value: Amazon AWS Connection
          bucket:
            type: configVar
            value: Amazon S3 Bucket Name
        name: Get Bucket Location
      - action:
          key: createTopic
          component:
            isPublic: true
            key: aws-s3
            version: LATEST
        description: ""
        inputs:
          awsConnection:
            type: configVar
            value: Amazon AWS Connection
          awsRegion:
            type: reference
            value: getBucketLocation.results
          name:
            type: reference
            value: integrationTrigger.results.instance.id
        name: Create SNS Topic For S3 Event Notification
      - action:
          key: getCurrentAccount
          component:
            isPublic: true
            key: aws-s3
            version: LATEST
        description: ""
        inputs:
          accessKey:
            type: configVar
            value: Amazon AWS Connection
        name: Get Current Account
      - action:
          key: updateTopicPolicy
          component:
            isPublic: true
            key: aws-s3
            version: LATEST
        description: ""
        inputs:
          awsConnection:
            type: configVar
            value: Amazon AWS Connection
          awsRegion:
            type: reference
            value: getBucketLocation.results
          bucket:
            type: configVar
            value: Amazon S3 Bucket Name
          bucketOwnerAccountid:
            type: reference
            value: getCurrentAccount.results.Account
          snsTopicArn:
            type: reference
            value: createSnsTopicForS3EventNotification.results.TopicArn
        name: Update SNS Topic Policy For S3 Event Notification
      - action:
          key: bucketEventTriggerConfiguration
          component:
            isPublic: true
            key: aws-s3
            version: LATEST
        description: ""
        inputs:
          awsConnection:
            type: configVar
            value: Amazon AWS Connection
          awsRegion:
            type: reference
            value: getBucketLocation.results
          bucket:
            type: configVar
            value: Amazon S3 Bucket Name
          bucketOwnerAccountid:
            type: reference
            value: getCurrentAccount.results.Account
          eventNotificationName:
            type: value
            value: MyObjectCreatedEvent
          eventsList:
            type: complex
            value:
              - type: value
                value: "s3:ObjectCreated:*"
          snsTopicArn:
            type: reference
            value: createSnsTopicForS3EventNotification.results.TopicArn
        name: Bucket SNS Event Trigger Configuration
      - action:
          key: subscribeToTopic
          component:
            isPublic: true
            key: aws-s3
            version: LATEST
        description: ""
        inputs:
          awsConnection:
            type: configVar
            value: Amazon AWS Connection
          awsRegion:
            type: reference
            value: getBucketLocation.results
          endpoint:
            type: reference
            value: integrationTrigger.results.webhookUrls.Receive SNS Notification
          snsTopicArn:
            type: reference
            value: createSnsTopicForS3EventNotification.results.TopicArn
        name: Subscribe to SNS Topic
      - action:
          key: saveCrossFlowValue
          component:
            isPublic: true
            key: persist-data
            version: LATEST
        description: ""
        inputs:
          keyInput:
            type: value
            value: sns-topic-arn
          valueInput:
            type: reference
            value: createSnsTopicForS3EventNotification.results.TopicArn
        name: Cross Flow - Save Value
  - description: >-
      This flow receives and processes notifications from SNS, and is triggered
      when files are created in the S3 bucket.
    endpointSecurityType: customer_optional
    isSynchronous: false
    name: Receive SNS Notification
    steps:
      - action:
          key: snsS3NotificationWebhook
          component:
            isPublic: true
            key: aws-s3
            version: LATEST
        branches:
          - name: Notification
            steps: []
          - name: Subscribe
            steps:
              - action:
                  key: stopExecution
                  component:
                    isPublic: true
                    key: stop-execution
                    version: LATEST
                description: ""
                inputs:
                  contentType:
                    type: value
                    value: application/json
                  jsonBody:
                    type: value
                    value: ""
                  statusCode:
                    type: value
                    value: "200"
                name: Stop Execution
        description: ""
        inputs: {}
        isTrigger: true
        name: Receive SNS Notification Trigger
      - action:
          key: deserializeFromJson
          component:
            isPublic: true
            key: change-data-format
            version: LATEST
        description: ""
        inputs:
          data:
            type: reference
            value: receiveSnsNotificationTrigger.results.body.data.Message
        name: Deserialize JSON
      - action:
          key: loopOverItems
          component:
            isPublic: true
            key: loop
            version: LATEST
        description: ""
        inputs:
          items:
            type: reference
            value: deserializeJson.results.Records
        name: Loop Over Items
        steps:
          - action:
              key: getObject
              component:
                isPublic: true
                key: aws-s3
                version: LATEST
            description: ""
            inputs:
              accessKey:
                type: configVar
                value: Amazon AWS Connection
              awsRegion:
                type: reference
                value: loopOverItems.currentItem.awsRegion
              bucket:
                type: reference
                value: loopOverItems.currentItem.s3.bucket.name
              objectKey:
                type: reference
                value: loopOverItems.currentItem.s3.object.key
            name: Get Object
          - action:
              key: writeLog
              component:
                isPublic: true
                key: log
                version: LATEST
            description: ""
            inputs:
              level:
                type: value
                value: info
              message:
                type: template
                value: >-
                  Got an "{{$loopOverItems.currentItem.eventName}}" event for
                  object "{{$loopOverItems.currentItem.s3.object.key}}" in
                  bucket "{{$loopOverItems.currentItem.s3.bucket.name}}"
            name: Write Log Message
  - description: >-
      Remove the SNS topic that was created on instance deploy when an instance
      is deleted.
    endpointSecurityType: customer_optional
    isSynchronous: false
    name: Remove SNS Topic
    steps:
      - action:
          key: instanceDeploy
          component:
            isPublic: true
            key: management-triggers
            version: LATEST
        description: ""
        inputs: {}
        isTrigger: true
        name: Clean Up Trigger
      - action:
          key: getBucketLocation
          component:
            isPublic: true
            key: aws-s3
            version: LATEST
        description: ""
        inputs:
          accessKey:
            type: configVar
            value: Amazon AWS Connection
          bucket:
            type: configVar
            value: Amazon S3 Bucket Name
        name: Get Bucket Location
      - action:
          key: getCrossFlowValue
          component:
            isPublic: true
            key: persist-data
            version: LATEST
        description: ""
        inputs:
          defaultValueInput:
            type: value
            value: ""
          keyInput:
            type: value
            value: sns-topic-arn
        name: Cross Flow - Get Value
      - action:
          key: branchOnExpression
          component:
            isPublic: true
            key: branch
            version: LATEST
        branches:
          - name: SNS Topic Set
            steps:
              - action:
                  key: deleteTopic
                  component:
                    isPublic: true
                    key: aws-sns
                    version: LATEST
                description: ""
                inputs:
                  awsConnection:
                    type: configVar
                    value: Amazon AWS Connection
                  awsRegion:
                    type: reference
                    value: getBucketLocation.results
                  topicArn:
                    type: reference
                    value: crossFlowGetValue.results
                name: Delete Topic
              - action:
                  key: removeCrossFlowValue
                  component:
                    isPublic: true
                    key: persist-data
                    version: LATEST
                description: ""
                inputs:
                  keyInput:
                    type: value
                    value: sns-topic-arn
                name: Cross Flow - Remove Value
          - name: Else
            steps: []
        description: ""
        inputs:
          conditions:
            type: complex
            value:
              - name: SNS Topic Set
                type: complex
                value:
                  - and
                  - - exists
                    - type: reference
                      value: crossFlowGetValue.results
        name: Branch on Expression
name: Amazon S3 Events Example
requiredConfigVars:
  - connection:
      key: apiKeySecret
      component:
        isPublic: true
        key: aws-s3
        version: LATEST
    dataType: connection
    inputs:
      accessKeyId:
        type: value
        value: ""
      secretAccessKey:
        type: value
        value: ""
    key: Amazon AWS Connection
    onPremiseConnectionConfig: disallowed
    orgOnly: false
  - dataSource:
      key: selectBucket
      component:
        isPublic: true
        key: aws-s3
        version: LATEST
    dataType: picklist
    defaultValue: ""
    description: Please choose an S3 bucket from this region
    inputs:
      accessKey:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: configVar
        value: Amazon AWS Connection
    key: Amazon S3 Bucket Name
    orgOnly: false
