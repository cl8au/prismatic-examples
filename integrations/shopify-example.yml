category: eCommerce
configPages:
  - elements:
      - type: configVar
        value: Shopify Connection
    name: Configuration
  - elements:
      - type: configVar
        value: Select Location
    name: Configure Shopify
    tagline: ""
    userLevelConfigured: false
definitionVersion: 7
description: ""
documentation: ""
endpointType: flow_specific
flows:
  - description: Loop over all pages of products and post each product to an API
    endpointSecurityType: customer_optional
    isSynchronous: false
    name: Initial Product Sync
    steps:
      - action:
          key: instanceDeploy
          component:
            isPublic: true
            key: management-triggers
            version: LATEST
        description: ""
        inputs: {}
        isTrigger: true
        name: Initial Product Sync Trigger
      - action:
          key: loopNTimes
          component:
            isPublic: true
            key: loop
            version: LATEST
        description: ""
        inputs:
          iterationCount:
            type: value
            value: "10"
        name: Loop Over Shopify Pages
        steps:
          - action:
              key: getExecutionValue
              component:
                isPublic: true
                key: persist-data
                version: LATEST
            description: ""
            inputs:
              defaultValueInput:
                type: value
                value: ""
              keyInput:
                type: value
                value: shopify_page_info
            name: Get Shopify Page Token
          - action:
              key: listProducts
              component:
                isPublic: true
                key: shopify
                version: LATEST
            description: ""
            inputs:
              debugRequest:
                type: value
                value: "true"
              limit:
                type: value
                value: ""
              pageInfo:
                type: reference
                value: getShopifyPageToken.results
              shopifyConnection:
                type: configVar
                value: Shopify Connection
            name: List Products
          - action:
              key: loopOverItems
              component:
                isPublic: true
                key: loop
                version: LATEST
            description: ""
            inputs:
              items:
                type: reference
                value: listProducts.results.data.products
            name: Loop Over Products
            steps:
              - action:
                  key: createObject
                  component:
                    isPublic: true
                    key: collection-tools
                    version: LATEST
                description: ""
                inputs:
                  keyValueInput:
                    type: complex
                    value:
                      - name: external_id
                        type: reference
                        value: loopOverProducts.currentItem.id
                      - name: name
                        type: reference
                        value: loopOverProducts.currentItem.title
                      - name: description
                        type: reference
                        value: loopOverProducts.currentItem.body_html
                name: Create acme product payload
              - action:
                  key: httpPost
                  component:
                    isPublic: true
                    key: http
                    version: LATEST
                description: ""
                inputs:
                  connection:
                    type: configVar
                    value: ""
                  data:
                    type: reference
                    value: createAcmeProductPayload.results
                  debugRequest:
                    type: value
                    value: "false"
                  headers:
                    type: complex
                    value:
                      - name: content-type
                        type: value
                        value: application/json
                  ignoreSslErrors:
                    type: value
                    value: "false"
                  includeFullResponse:
                    type: value
                    value: "false"
                  maxRetries:
                    type: value
                    value: "0"
                  queryParams:
                    type: complex
                    value: []
                  responseType:
                    type: value
                    value: json
                  retryDelayMS:
                    type: value
                    value: "0"
                  retryOnAllErrors:
                    type: value
                    value: "false"
                  timeout:
                    type: value
                    value: ""
                  url:
                    type: value
                    value: "https://postman-echo.com/post"
                  useExponentialBackoff:
                    type: value
                    value: "false"
                name: Send Product to Acme
          - action:
              key: branchOnExpression
              component:
                isPublic: true
                key: branch
                version: LATEST
            branches:
              - name: No More Data
                steps:
                  - action:
                      key: breakLoop
                      component:
                        isPublic: true
                        key: loop
                        version: LATEST
                    description: ""
                    inputs: {}
                    name: Break Loop
              - name: Else
                steps:
                  - action:
                      key: saveExecutionValue
                      component:
                        isPublic: true
                        key: persist-data
                        version: LATEST
                    description: ""
                    inputs:
                      keyInput:
                        type: value
                        value: shopify_page_info
                      valueInput:
                        type: reference
                        value: listProducts.results.pageInfo
                    name: Save Shopify Page Token
            description: ""
            inputs:
              conditions:
                type: complex
                value:
                  - name: No More Data
                    type: complex
                    value:
                      - and
                      - - doesNotExist
                        - type: reference
                          value: listProducts.results.pageInfo
            name: Branch on Expression
  - description: Listen for create/update/delete events on products
    endpointSecurityType: customer_optional
    isSynchronous: false
    name: Product update listener
    steps:
      - action:
          key: eventTopicWebhook
          component:
            isPublic: true
            key: shopify
            version: LATEST
        description: Listen for create/update/delete events on products
        inputs:
          connectionInput:
            type: configVar
            value: Shopify Connection
          secret_key:
            type: value
            value: ""
          webhookTopic:
            type: complex
            value:
              - type: value
                value: products/create
              - type: value
                value: products/update
              - type: value
                value: products/delete
        isTrigger: true
        name: Product Updates Trigger
      - action:
          key: branchOnValue
          component:
            isPublic: true
            key: branch
            version: LATEST
        branches:
          - name: Product Created
            steps:
              - action:
                  key: createObject
                  component:
                    isPublic: true
                    key: collection-tools
                    version: LATEST
                description: ""
                inputs:
                  keyValueInput:
                    type: complex
                    value:
                      - name: external_id
                        type: reference
                        value: productUpdatesTrigger.results.body.data.id
                      - name: product_name
                        type: reference
                        value: productUpdatesTrigger.results.body.data.title
                      - name: description
                        type: reference
                        value: productUpdatesTrigger.results.body.data.body_html
                name: Create new product payload
              - action:
                  key: httpPost
                  component:
                    isPublic: true
                    key: http
                    version: LATEST
                description: ""
                inputs:
                  connection:
                    type: configVar
                    value: ""
                  data:
                    type: reference
                    value: createNewProductPayload.results
                  debugRequest:
                    type: value
                    value: "false"
                  headers:
                    type: complex
                    value: []
                  ignoreSslErrors:
                    type: value
                    value: "false"
                  includeFullResponse:
                    type: value
                    value: "false"
                  maxRetries:
                    type: value
                    value: "0"
                  queryParams:
                    type: complex
                    value: []
                  responseType:
                    type: value
                    value: json
                  retryDelayMS:
                    type: value
                    value: "0"
                  retryOnAllErrors:
                    type: value
                    value: "false"
                  timeout:
                    type: value
                    value: ""
                  url:
                    type: value
                    value: "https://postman-echo.com/post"
                  useExponentialBackoff:
                    type: value
                    value: "false"
                name: POST Request
          - name: Product Updated
            steps:
              - action:
                  key: createObject
                  component:
                    isPublic: true
                    key: collection-tools
                    version: LATEST
                description: ""
                inputs:
                  keyValueInput:
                    type: complex
                    value:
                      - name: external_id
                        type: reference
                        value: productUpdatesTrigger.results.body.data.id
                      - name: product_name
                        type: reference
                        value: productUpdatesTrigger.results.body.data.title
                      - name: description
                        type: reference
                        value: productUpdatesTrigger.results.body.data.body_html
                name: Create product update payload
              - action:
                  key: httpPut
                  component:
                    isPublic: true
                    key: http
                    version: LATEST
                description: ""
                inputs:
                  connection:
                    type: configVar
                    value: ""
                  data:
                    type: reference
                    value: createProductUpdatePayload.results
                  debugRequest:
                    type: value
                    value: "false"
                  headers:
                    type: complex
                    value: []
                  ignoreSslErrors:
                    type: value
                    value: "false"
                  includeFullResponse:
                    type: value
                    value: "false"
                  maxRetries:
                    type: value
                    value: "0"
                  queryParams:
                    type: complex
                    value: []
                  responseType:
                    type: value
                    value: json
                  retryDelayMS:
                    type: value
                    value: "0"
                  retryOnAllErrors:
                    type: value
                    value: "false"
                  timeout:
                    type: value
                    value: ""
                  url:
                    type: value
                    value: "https://postman-echo.com/put"
                  useExponentialBackoff:
                    type: value
                    value: "false"
                name: Update Product in Acme
          - name: Product Deleted
            steps:
              - action:
                  key: writeLog
                  component:
                    isPublic: true
                    key: log
                    version: LATEST
                description: ""
                inputs:
                  level:
                    type: value
                    value: info
                  message:
                    type: template
                    value: >-
                      A product with ID
                      "{{$productUpdatesTrigger.results.body.data.id}}" was
                      deleted
                name: Write Log Message
          - name: Else
            steps:
              - action:
                  key: stopExecution
                  component:
                    isPublic: true
                    key: stop-execution
                    version: LATEST
                description: ""
                inputs:
                  contentType:
                    type: value
                    value: application/json
                  jsonBody:
                    type: value
                    value: ""
                  statusCode:
                    type: value
                    value: "200"
                name: Stop Execution
        description: ""
        inputs:
          branchValueMappings:
            type: complex
            value:
              - name: Product Created
                type: value
                value: products/create
              - name: Product Updated
                type: value
                value: products/update
              - name: Product Deleted
                type: value
                value: products/delete
          inputValue:
            type: reference
            value: productUpdatesTrigger.results.headers.X-Shopify-Topic
        name: Branch on Value
  - description: >-
      Synchronously check inventory levels for the selected location, returning
      results as a JSON response.
    endpointSecurityType: customer_optional
    isSynchronous: true
    name: List Inventory Levels
    steps:
      - action:
          key: webhook
          component:
            isPublic: true
            key: webhook-triggers
            version: LATEST
        description: ""
        inputs:
          body:
            type: value
            value: ""
          contentType:
            type: value
            value: ""
          headers:
            type: complex
            value: []
          statusCode:
            type: value
            value: ""
        isTrigger: true
        name: List Inventory Levels Trigger
      - action:
          key: listInventoryLevels
          component:
            isPublic: true
            key: shopify
            version: LATEST
        description: ""
        inputs:
          debugRequest:
            type: value
            value: "true"
          limit:
            type: value
            value: ""
          locationId:
            type: configVar
            value: Select Location
          pageInfo:
            type: value
            value: ""
          shopifyConnection:
            type: configVar
            value: Shopify Connection
        name: List Inventory Levels At Location
name: Shopify Example Integration
requiredConfigVars:
  - key: Shopify Connection
    inputs:
      authorizeUrl:
        meta:
          orgOnly: false
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: true
        type: value
        value: "https://YOUR-SHOPIFY-DOMAIN.myshopify.com/admin/oauth/authorize"
      clientId:
        meta:
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: ""
      clientSecret:
        meta:
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: ""
      host:
        meta:
          orgOnly: false
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: true
        type: value
        value: YOUR-SHOPIFY-DOMAIN.myshopify.com
      scopes:
        meta:
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: >-
          read_products write_products read_orders write_orders read_customers
          write_customers read_draft_orders write_draft_orders read_fulfillments
          write_fulfillments read_inventory
      tokenUrl:
        meta:
          orgOnly: false
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: true
        type: value
        value: "https://YOUR-SHOPIFY-DOMAIN.myshopify.com/admin/oauth/access_token"
    orgOnly: false
    meta:
      oAuthSuccessRedirectUri: "http://localhost:3001/shopify/configure"
    dataType: connection
    onPremiseConnectionConfig: disallowed
    connection:
      key: oauth2
      component:
        key: shopify
        version: LATEST
        isPublic: true
  - dataSource:
      key: listLocations
      component:
        isPublic: true
        key: shopify
        version: LATEST
    dataType: picklist
    defaultValue: ""
    description: Choose the location where inventory levels will be synced from
    inputs:
      shopifyConnection:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: configVar
        value: Shopify Connection
    key: Select Location
    orgOnly: false
